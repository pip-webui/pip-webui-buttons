{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/buttons.ts","src/dependencies/translate.ts","src/fabs/fab_tooltip_visibility.ts","src/refresh_button/refresh_button.ts","src/toggle_buttons/toggle_buttons.ts","temp/pip-webui-buttons-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-buttons.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","ï»¿/// <reference path=\"../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    angular.module('pipButtons', [\n        'pipToggleButtons',\n        'pipRefreshButton',\n        'pipFabTooltipVisibility'\n    ]);\n\n})();\n\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    function ToggleButtonsFilter($injector: ng.auto.IInjectorService) {\n        const pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        return function(key: string) {\n            return pipTranslate  ? pipTranslate['translate'](key) || key : key;\n        }\n    }\n\n    angular.module('pipButtons.Translate', [])\n        .filter('translate', ToggleButtonsFilter);\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    class FabTooltipVisibilityController {\n        private _element;\n        private _scope: angular.IScope;\n        private _timeout: ng.ITimeoutService;\n\n        constructor(\n            $element: any,\n            $attrs: angular.IAttributes,\n            $scope: angular.IScope,\n            $timeout: ng.ITimeoutService,\n            $parse\n        ) {\n            \"ngInject\";\n            let trigGetter = $parse($attrs['pipFabTooltipVisibility']),\n                showGetter = $parse($attrs['pipFabShowTooltip']),\n                showSetter = showGetter.assign;\n\n            $scope.$watch(trigGetter, (isOpen) => {\n                if (!_.isFunction(showSetter)) return;\n\n                if (isOpen) {\n                    $timeout(() => {\n                        showSetter($scope, isOpen);\n                    }, 600);\n                } else {\n                    showSetter($scope, isOpen);\n                }\n            });\n        }\n    }\n\n\n    function pipFabTooltipVisibility($parse, $timeout) {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: FabTooltipVisibilityController\n        };\n    }\n\n    angular\n        .module('pipFabTooltipVisibility', [])\n        .directive('pipFabTooltipVisibility', pipFabTooltipVisibility);\n\n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    interface IRefreshButtonBindings {\n        [key: string]: any;\n\n        text: any,\n            visible: any,\n            onRefresh: any\n    }\n\n    const RefreshButtonBindings: IRefreshButtonBindings = {\n        text: '<pipText',\n        visible: '<pipVisible',\n        onRefresh: '&?pipRefresh'\n    }\n\n    class RefreshButtonChanges implements ng.IOnChangesObject, IRefreshButtonBindings {\n        [key: string]: ng.IChangesObject < any > ;\n        // Not one way bindings\n        onRefresh: ng.IChangesObject < ({\n            $event: any\n        }) => ng.IPromise < any >> ;\n        // One way bindings\n        text: ng.IChangesObject < string > ;\n        visible: ng.IChangesObject < boolean > ;\n    }\n\n    class RefreshButtonController implements IRefreshButtonBindings {\n\n        private _textElement: any;\n        private _buttonElement: any;\n        private _width: number;\n\n        public text: string;\n        public visible: boolean;\n        public onRefresh: (param: {\n            $event: ng.IAngularEvent\n        }) => ng.IPromise < any > ;\n\n        constructor(\n            private $scope: ng.IScope,\n            private $element: any,\n            private $attrs: ng.IAttributes\n        ) {}\n\n        public $postLink() {\n            this._buttonElement = this.$element.children('.md-button');\n            this._textElement = this._buttonElement.children('.pip-refresh-text');\n\n            this.show();\n        }\n\n        public $onChanges(changes: RefreshButtonChanges) {\n            if (changes.visible.currentValue === true) {\n                this.text = changes.text.currentValue;\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n\n        public onClick($event) {\n            if (this.onRefresh) {\n                this.onRefresh({\n                    $event: $event\n                });\n            }\n        }\n\n        private show() {\n            if (this._textElement === undefined || this._buttonElement === undefined) {\n                return;\n            }\n            // Set new text\n            this._textElement.text(this.text);\n            // Show button\n            this._buttonElement.show();\n            // Adjust position\n            const width = this._buttonElement.width();\n            this._buttonElement.css('margin-left', '-' + width / 2 + 'px');\n        }\n\n        private hide() {\n            this._buttonElement.hide();\n        }\n    }\n\n\n    const RefreshButtonComponent: ng.IComponentOptions = {\n        bindings: RefreshButtonBindings,\n        controller: RefreshButtonController,\n        template: '<md-button class=\"pip-refresh-button\" tabindex=\"-1\" ng-click=\"$ctrl.onClick($event)\" aria-label=\"REFRESH\">' +\n            '<md-icon md-svg-icon=\"icons:refresh\"></md-icon>' +\n            '<span class=\"pip-refresh-text\"></span>' +\n            '</md-button>'\n    };\n\n    angular.module('pipRefreshButton', ['ngMaterial'])\n        .component('pipRefreshButton', RefreshButtonComponent);\n\n})();","// /// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    class ToggleButton {\n        id: any;\n        name: string;\n        disabled: boolean;\n        level: number;\n        diselectable: boolean;\n        filled: boolean;\n    }\n\n    interface IToggleButtonsBindings {\n        [key: string]: any;\n\n        ngDisabled: any;\n        buttons: any;\n        currentButtonValue: any;\n        currentButton: any;\n        multiselect: any;\n        change: any;\n        onlyToggle: any\n    }\n\n    const ToggleButtonsBindings: IToggleButtonsBindings = {\n        ngDisabled: '<?',\n        buttons: '<pipButtons',\n        currentButtonValue: '=ngModel',\n        currentButton: '=?pipButtonObject',\n        multiselect: '<?pipMultiselect',\n        change: '&ngChange',\n        onlyToggle: '<?pipOnlyToggle'\n    }\n\n    class ToggleButtonsChanges implements ng.IOnChangesObject, IToggleButtonsBindings {\n        [key: string]: ng.IChangesObject < any > ;\n        // Not one way bindings\n        currentButtonValue: any;\n        currentButton: any;\n        change: ng.IChangesObject < () => ng.IPromise < void >> ;\n        // One way bindings\n        ngDisabled: ng.IChangesObject < boolean > ;\n        buttons: ng.IChangesObject < ToggleButton[] > ;\n        multiselect: ng.IChangesObject < boolean > ;\n        onlyToggle: ng.IChangesObject < boolean > ;\n    }\n\n    class ToggleButtonsController implements IToggleButtonsBindings {\n        lenght: number;\n\n        public ngDisabled: boolean;\n        public class: string;\n        public multiselect: boolean;\n        public buttons: ToggleButton[];\n        public disabled: boolean;\n        public currentButtonValue: any;\n        public currentButtonIndex: number;\n        public currentButton: any;\n        public change: () => ng.IPromise < any > ;\n        public onlyToggle: boolean;\n        public pipMedia: any;\n\n        constructor(\n            private $element: any,\n            private $attrs: angular.IAttributes,\n            private $scope: angular.IScope,\n            private $timeout: ng.ITimeoutService,\n            $injector: ng.auto.IInjectorService\n        ) {\n            \"ngInject\";\n\n            this.pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n            this.class = $attrs['class'] || '';\n            const index = _.indexOf(this.buttons, _.find(this.buttons, {\n                id: this.currentButtonValue\n            }));\n            this.currentButtonIndex = index < 0 ? 0 : index;\n            this.currentButton = this.buttons.length > 0 ? this.buttons[this.currentButtonIndex] : this.currentButton;\n        }\n\n        public $onChanges(changes: ToggleButtonsChanges) {\n            this.multiselect = changes.multiselect ? changes.multiselect.currentValue : false;\n            this.disabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false;\n            this.onlyToggle = changes.onlyToggle ? changes.onlyToggle.currentValue : false;\n\n            this.buttons = !changes.buttons || _.isArray(changes.buttons.currentValue) && changes.buttons.currentValue.length === 0 ? [] : changes.buttons.currentValue;\n\n            const index = _.indexOf(this.buttons, _.find(this.buttons, {\n                id: this.currentButtonValue\n            }));\n            this.currentButtonIndex = index < 0 ? 0 : index;\n            this.currentButton = this.buttons.length > 0 ? this.buttons[this.currentButtonIndex] : this.currentButton;\n        }\n\n        public $postLink() {\n            this.$element\n                .on('focusin', () => {\n                    this.$element.addClass('focused-container');\n                })\n                .on('focusout', () => {\n                    this.$element.removeClass('focused-container');\n                });\n        }\n\n        public buttonSelected(index) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.currentButtonIndex = index;\n            this.currentButton = this.buttons[this.currentButtonIndex];\n            this.currentButtonValue = this.currentButton.id || index;\n\n            this.$timeout(() => {\n                if (this.change) {\n                    this.change();\n                }\n            });\n        }\n\n        public enterSpacePress(event) {\n            this.buttonSelected(event.index);\n        }\n\n        public highlightButton(index) {\n            if (this.multiselect &&\n                !_.isUndefined(this.currentButton.level) &&\n                !_.isUndefined(this.buttons[index].level)) {\n\n                return this.currentButton.level >= this.buttons[index].level;\n            }\n\n            return this.currentButtonIndex == index;\n        }\n    }\n\n    const ToggleButtons: ng.IComponentOptions = {\n        bindings: ToggleButtonsBindings,\n        templateUrl: 'toggle_buttons/toggle_buttons.html',\n        controller: ToggleButtonsController\n    }\n\n    angular\n        .module('pipToggleButtons', ['pipButtons.Templates'])\n        .component('pipToggleButtons', ToggleButtons);\n\n})();","(function(module) {\ntry {\n  module = angular.module('pipButtons.Templates');\n} catch (e) {\n  module = angular.module('pipButtons.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('toggle_buttons/toggle_buttons.html',\n    '<div class=\"pip-toggle-buttons layout-row {{$ctrl.class}}\" pip-selected=\"$ctrl.bufButtonIndex\" pip-enter-space-press=\"$ctrl.enterSpacePress($event)\" ng-if=\"!$ctrl.pipMedia(\\'xs\\') || $ctrl.onlyToggle\"><md-button tabindex=\"-1\" ng-repeat=\"button in $ctrl.buttons\" ng-class=\"{\\'md-accent md-raised selected color-accent-bg\\' : $ctrl.highlightButton($index)}\" ng-attr-style=\"{{ \\'background-color:\\' + ($ctrl.highlightButton($index) ? button.backgroundColor : \\'\\') + \\'!important\\' }}\" class=\"pip-selectable pip-chip-button flex\" ng-click=\"$ctrl.buttonSelected($index, $event)\" ng-disabled=\"button.disabled || $ctrl.disabled\">{{button.name || button.title | translate}} <span ng-if=\"button.checked || button.complete || button.filled\" class=\"pip-tagged\">*</span></md-button></div><md-input-container class=\"md-block\" ng-if=\"$ctrl.pipMedia(\\'xs\\') && !$ctrl.onlyToggle\"><md-select ng-model=\"$ctrl.currentButtonIndex\" ng-disabled=\"$ctrl.disabled\" aria-label=\"DROPDOWN\" md-on-close=\"$ctrl.buttonSelected($ctrl.currentButtonIndex)\"><md-option ng-repeat=\"action in $ctrl.buttons\" value=\"{{ ::$index }}\">{{ (action.title || action.name) | translate }} <span ng-if=\"action.checked || action.complete || action.filled\" class=\"pip-tagged\">*</span></md-option></md-select></md-input-container>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-buttons-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}