{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/buttons.ts","src/dependencies/translate.ts","src/fabs/fab_tooltip_visibility.ts","src/refresh_button/refresh_button.ts","src/toggle_buttons/toggle_buttons.ts","temp/pip-webui-buttons-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-buttons.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","ï»¿/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipButtons', [\r\n        'pipToggleButtons',\r\n        'pipRefreshButton',\r\n        'pipFabTooltipVisibility'\r\n    ]);\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipButtons.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nclass FabTooltipVisibilityController {\r\n    private _element;\r\n    private _scope: angular.IScope;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    constructor(\r\n        $element: any,\r\n        $attrs: angular.IAttributes,\r\n        $scope: angular.IScope,\r\n        $timeout: ng.ITimeoutService,\r\n        $parse\r\n    ) {\r\n        \"ngInject\";\r\n        let trigGetter = $parse($attrs['pipFabTooltipVisibility']),\r\n            showGetter = $parse($attrs['pipFabShowTooltip']),\r\n            showSetter = showGetter.assign;\r\n\r\n        $scope.$watch(trigGetter, (isOpen) => {\r\n            if (!_.isFunction(showSetter)) return;\r\n\r\n            if (isOpen) {\r\n                $timeout(() => {\r\n                    showSetter($scope, isOpen);\r\n                }, 600);\r\n            } else {\r\n                showSetter($scope, isOpen);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n(() => {\r\n    function pipFabTooltipVisibility($parse, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            controller: FabTooltipVisibilityController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFabTooltipVisibility', [])\r\n        .directive('pipFabTooltipVisibility', pipFabTooltipVisibility);\r\n\r\n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\ninterface IRefreshButtonBindings {\r\n    [key: string]: any;\r\n\r\n    text: any,\r\n    visible: any,\r\n    onRefresh: any\r\n}\r\n\r\nconst RefreshButtonBindings: IRefreshButtonBindings = {\r\n    text: '<pipText',\r\n    visible: '<pipVisible',\r\n    onRefresh: '&?pipRefresh'\r\n}\r\n\r\nclass RefreshButtonChanges implements ng.IOnChangesObject, IRefreshButtonBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n    // Not one way bindings\r\n    onRefresh: ng.IChangesObject<({$event: any}) => ng.IPromise<any>>;\r\n    // One way bindings\r\n    text: ng.IChangesObject<string>;\r\n    visible: ng.IChangesObject<boolean>;\r\n}\r\n\r\nclass RefreshButtonController implements IRefreshButtonBindings {\r\n\r\n    private _textElement: any;\r\n    private _buttonElement: any;\r\n    private _width: number;\r\n\r\n    public text: string;\r\n    public visible: boolean;\r\n    public onRefresh: (param: {$event: ng.IAngularEvent}) => ng.IPromise<any>;\r\n\r\n    constructor(\r\n        private $scope: ng.IScope,\r\n        private $element: any,\r\n        private $attrs: ng.IAttributes\r\n    ) { }\r\n\r\n    public $postLink() {\r\n        this._buttonElement = this.$element.children('.md-button');\r\n        this._textElement = this._buttonElement.children('.pip-refresh-text');\r\n        \r\n        this.show();\r\n    }\r\n\r\n    public $onChanges(changes: RefreshButtonChanges) {\r\n        if (changes.visible.currentValue === true) {\r\n            this.text = changes.text.currentValue;\r\n            this.show();\r\n        } else {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    public onClick($event) {\r\n        if (this.onRefresh) {\r\n            this.onRefresh({$event: $event});\r\n        }\r\n    }\r\n\r\n    private show() {\r\n        if (this._textElement === undefined || this._buttonElement === undefined) {\r\n            return;\r\n        }\r\n        // Set new text\r\n        this._textElement.text(this.text);\r\n        // Show button\r\n        this._buttonElement.show();\r\n        // Adjust position\r\n        const width = this._buttonElement.width();\r\n        this._buttonElement.css('margin-left', '-' + width / 2 + 'px');\r\n    }\r\n\r\n    private hide() {\r\n        this._buttonElement.hide();\r\n    }\r\n}\r\n\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    const RefreshButtonComponent = {\r\n        bindings: RefreshButtonBindings,\r\n        controller: RefreshButtonController,\r\n        template: '<md-button class=\"pip-refresh-button\" tabindex=\"-1\" ng-click=\"$ctrl.onClick($event)\" aria-label=\"REFRESH\">' +\r\n            '<md-icon md-svg-icon=\"icons:refresh\"></md-icon>' +\r\n            '<span class=\"pip-refresh-text\"></span>' +\r\n            '</md-button>'\r\n    };\r\n\r\n    angular.module('pipRefreshButton', ['ngMaterial'])\r\n        .component('pipRefreshButton', RefreshButtonComponent);\r\n\r\n})();","// /// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nclass ToggleButton {\r\n    id: any;\r\n    name: string;\r\n    disabled: boolean;\r\n    level: number;\r\n    diselectable: boolean;\r\n    filled: boolean;\r\n}\r\n\r\ninterface IToggleButtonsBindings {\r\n    [key: string]: any;\r\n\r\n    ngDisabled: any,\r\n    buttons: any,\r\n    currentButtonValue: any,\r\n    currentButton: any,\r\n    multiselect: any,\r\n    change: any,\r\n    onlyToggle: any\r\n}\r\n\r\nconst ToggleButtonsBindings: IToggleButtonsBindings = {\r\n    ngDisabled: '<?',\r\n    buttons: '<pipButtons',\r\n    currentButtonValue: '=ngModel',\r\n    currentButton: '=?pipButtonObject',\r\n    multiselect: '<?pipMultiselect',\r\n    change: '&ngChange',\r\n    onlyToggle: '<?pipOnlyToggle'\r\n}\r\n\r\nclass ToggleButtonsChanges implements ng.IOnChangesObject, IToggleButtonsBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n    \r\n    currentButtonValue: any;\r\n    currentButton: any;\r\n    change: ng.IChangesObject<() => ng.IPromise<void>>;\r\n\r\n    ngDisabled: ng.IChangesObject<boolean>;\r\n    buttons: ng.IChangesObject<ToggleButton[]>;\r\n    multiselect: ng.IChangesObject<boolean>;\r\n    onlyToggle: ng.IChangesObject<boolean>;\r\n}\r\n\r\nclass ToggleButtonsController implements IToggleButtonsBindings {\r\n\r\n    public ngDisabled: boolean;\r\n    public class: string;\r\n    public multiselect: boolean;\r\n    public buttons: ToggleButton[];\r\n    public disabled: boolean;\r\n    public currentButtonValue: any;\r\n    public currentButtonIndex: number;\r\n    public currentButton: any;\r\n    public change: () => ng.IPromise<any>;\r\n    public onlyToggle: boolean;\r\n\r\n    constructor(\r\n        private $element: any,\r\n        private $attrs: angular.IAttributes,\r\n        private $scope: angular.IScope,\r\n        private $timeout: ng.ITimeoutService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.class = $attrs['class'] || '';\r\n        let index = _.indexOf(this.buttons, _.find(this.buttons, {\r\n            id: this.currentButtonValue\r\n        }));\r\n        this.currentButtonIndex = index < 0 ? 0 : index;\r\n        this.currentButton = this.buttons.length > 0 ? this.buttons[this.currentButtonIndex] : this.currentButton;\r\n    }\r\n\r\n    public $onChanges(changes: ToggleButtonsChanges) {\r\n        this.multiselect = changes.multiselect ? changes.multiselect.currentValue : false;\r\n        this.disabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false;\r\n        this.onlyToggle = changes.onlyToggle ? changes.onlyToggle.currentValue : false;\r\n\r\n        this.buttons = !changes.buttons || _.isArray(changes.buttons.currentValue) && changes.buttons.currentValue.length === 0 ? \r\n            [] : changes.buttons.currentValue;\r\n\r\n        let index = _.indexOf(this.buttons, _.find(this.buttons, {\r\n            id: this.currentButtonValue\r\n        }));\r\n        this.currentButtonIndex = index < 0 ? 0 : index;\r\n        this.currentButton = this.buttons.length > 0 ? this.buttons[this.currentButtonIndex] : this.currentButton;\r\n    }\r\n\r\n    public $postLink() {\r\n        this.$element\r\n            .on('focusin', () => {\r\n                this.$element.addClass('focused-container');\r\n            })\r\n            .on('focusout', () => {\r\n                this.$element.removeClass('focused-container');\r\n            });\r\n    }\r\n\r\n    public buttonSelected(index) {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.currentButtonIndex = index;\r\n        this.currentButton = this.buttons[this.currentButtonIndex];\r\n        this.currentButtonValue = this.currentButton.id || index;\r\n\r\n        this.$timeout(() => {\r\n            if (this.change) {\r\n                this.change();\r\n            }\r\n        });\r\n    }\r\n\r\n    public enterSpacePress(event) {\r\n        this.buttonSelected(event.index);\r\n    }\r\n\r\n    public highlightButton(index) {\r\n        if (this.multiselect &&\r\n            !_.isUndefined(this.currentButton.level) &&\r\n            !_.isUndefined(this.buttons[index].level)) {\r\n\r\n            return this.currentButton.level >= this.buttons[index].level;\r\n        }\r\n\r\n        return this.currentButtonIndex == index;\r\n    }\r\n}\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    const ToggleButtons = {\r\n        bindings: ToggleButtonsBindings,\r\n        templateUrl: 'toggle_buttons/toggle_buttons.html',\r\n        controller: ToggleButtonsController,\r\n        controllerAs: 'toggle'\r\n    }\r\n\r\n    angular\r\n        .module('pipToggleButtons', ['pipButtons.Templates'])\r\n        .component('pipToggleButtons', ToggleButtons);\r\n    \r\n})();","(function(module) {\ntry {\n  module = angular.module('pipButtons.Templates');\n} catch (e) {\n  module = angular.module('pipButtons.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('toggle_buttons/toggle_buttons.html',\n    '<div class=\"pip-toggle-buttons layout-row {{toggle.class}}\" pip-selected=\"toggle.bufButtonIndex\" pip-enter-space-press=\"toggle.enterSpacePress($event)\" ng-if=\"!toggle.$mdMedia(\\'xs\\') || toggle.onlyToggle\"><md-button tabindex=\"-1\" ng-repeat=\"button in toggle.buttons\" ng-class=\"{\\'md-accent md-raised selected color-accent-bg\\' : toggle.highlightButton($index)}\" ng-attr-style=\"{{ \\'background-color:\\' + (toggle.highlightButton($index) ? button.backgroundColor : \\'\\') + \\'!important\\' }}\" class=\"pip-selectable pip-chip-button flex\" ng-click=\"toggle.buttonSelected($index, $event)\" ng-disabled=\"button.disabled || toggle.ngDisabled\">{{button.name || button.title | translate}} <span ng-if=\"button.checked || button.complete || button.filled\" class=\"pip-tagged\">*</span></md-button></div><md-input-container class=\"md-block\" ng-if=\"toggle.$mdMedia(\\'xs\\') && !toggle.onlyToggle\"><md-select ng-model=\"toggle.currentButtonIndex\" ng-disabled=\"toggle.ngDisabled\" aria-label=\"DROPDOWN\" md-on-close=\"toggle.buttonSelected(toggle.currentButtonIndex)\"><md-option ng-repeat=\"action in toggle.buttons\" value=\"{{ ::$index }}\">{{ (action.title || action.name) | translate }} <span ng-if=\"action.checked || action.complete || action.filled\" class=\"pip-tagged\">*</span></md-option></md-select></md-input-container>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-buttons-html.min.js.map\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}