{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/buttons.ts","src/dependencies/translate.ts","src/fabs/fab_tooltip_visibility.ts","src/refresh_button/refresh_button.ts","src/toggle_buttons/toggle_buttons.ts","temp/pip-webui-buttons-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-buttons.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","ï»¿/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipButtons', [\r\n        'pipToggleButtons',\r\n        'pipRefreshButton',\r\n        'pipFabTooltipVisibility'\r\n    ]);\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipButtons.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function(){\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipFabTooltipVisibility\", []);\r\n\r\n    thisModule.directive(\"pipFabTooltipVisibility\", function ($parse, $timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: false,\r\n            controller: function($scope, $attrs) {\r\n                var trigGetter = $parse($attrs.pipFabTooltipVisibility),\r\n                    showGetter = $parse($attrs.pipFabShowTooltip),\r\n                    showSetter = showGetter.assign;\r\n\r\n                $scope.$watch(trigGetter, function(isOpen) {\r\n                    if (isOpen) {\r\n                        $timeout(function() {\r\n                            showSetter($scope, isOpen);\r\n                        }, 600);\r\n                    } else {\r\n                        showSetter($scope, isOpen);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipRefreshButton', ['ngMaterial']);\r\n\r\n    thisModule.directive('pipRefreshButton',\r\n        function ($parse) {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: false,\r\n                template: String() +\r\n                '<md-button class=\"pip-refresh-button\" tabindex=\"-1\" ng-click=\"onClick($event)\" aria-label=\"REFRESH\">' +\r\n                '<md-icon md-svg-icon=\"icons:refresh\"></md-icon>' +\r\n                '<span class=\"pip-refresh-text\"></span>' +\r\n                '</md-button>',\r\n                replace: false,\r\n                link: function ($scope, $element, $attrs: any) {\r\n                    var width, text, show,\r\n                        textGetter = $parse($attrs.pipText),\r\n                        visibleGetter = $parse($attrs.pipVisible),\r\n                        refreshGetter = $parse($attrs.pipRefresh),\r\n                        $button = $element.children('.md-button'),\r\n                        $text = $button.children('.pip-refresh-text');\r\n\r\n                    show = function () {\r\n                        // Set a new text\r\n                        text = textGetter($scope);\r\n                        $text.text(text);\r\n\r\n                        // Show button\r\n                        $button.show();\r\n\r\n                        // Adjust position\r\n                        width = $button.width();\r\n                        $button.css('margin-left', '-' + width / 2 + 'px');\r\n                    };\r\n\r\n                    function hide() {\r\n                        $button.hide();\r\n                    }\r\n\r\n                    (<any>$scope).onClick = function () {\r\n                        refreshGetter($scope);\r\n                    };\r\n\r\n                    $scope.$watch(visibleGetter, function (newValue) {\r\n                        if (newValue) {\r\n                            show();\r\n                        } else {\r\n                            hide();\r\n                        }\r\n                    });\r\n\r\n                    $scope.$watch(textGetter, function (newValue: string) {\r\n                        $text.text(newValue);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nclass ToggleButtonsController {\r\n    private _element;\r\n    private _scope: angular.IScope;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    public $mdMedia: angular.material.IMedia;\r\n    public class: string;\r\n    public multiselect: boolean;\r\n    public buttons;\r\n    public currentButtonValue;\r\n    public currentButtonIndex: number;\r\n    public currentButton;\r\n    public buttonSelected;\r\n    public disabled;\r\n    public enterSpacePress;\r\n    public ngDisabled: Function;\r\n    public highlightButton;\r\n    public change: Function;\r\n    public onlyToggle: boolean;\r\n    \r\n    constructor(\r\n        $mdMedia: angular.material.IMedia,\r\n        $element: any,\r\n        $attrs: angular.IAttributes,\r\n        $scope: angular.IScope,\r\n        $timeout: ng.ITimeoutService\r\n    ) {\r\n        \"ngInject\";\r\n         this.$mdMedia = $mdMedia;\r\n         this.class = $attrs['class'] || '';\r\n         this.multiselect = $scope['multiselect'] || false;\r\n         this.ngDisabled = $scope['ngDisabled'];\r\n         this.currentButtonValue = $scope['currentButtonValue'];\r\n         this.currentButton = $scope['currentButton'];\r\n         this.change = $scope['change'];\r\n         this.onlyToggle = $scope['onlyToggle'];\r\n\r\n         this.buttons = !$scope['buttons'] || _.isArray($scope['buttons']) && $scope['buttons'].length === 0 ? \r\n                        [] : $scope['buttons'];\r\n         \r\n        let index = _.indexOf(this.buttons, _.find(this.buttons, {id: this.currentButtonValue}));\r\n        this.currentButtonIndex = index < 0 ? 0 : index;\r\n        this.currentButton = this.buttons.length > 0 ? this.buttons[this.currentButtonIndex] : this.currentButton;\r\n       \r\n        this.buttonSelected = (index) => {\r\n            if (this.disabled()) { return; }\r\n            this.currentButtonIndex = index;\r\n            this.currentButton = this.buttons[this.currentButtonIndex];\r\n            this.currentButtonValue = this.currentButton.id || index;\r\n\r\n            $timeout( () => {\r\n                if (this.change) {\r\n                    this.change();\r\n                } });\r\n        };\r\n\r\n        this.enterSpacePress = (event) => {\r\n             this.buttonSelected(event.index);\r\n        };\r\n\r\n        this.disabled = () => {\r\n            if (this.ngDisabled) { \r\n                return this.ngDisabled(); \r\n            }\r\n        };\r\n\r\n        this.highlightButton = (index) => {\r\n            if (this.multiselect && \r\n                !_.isUndefined(this.currentButton.level) && \r\n                !_.isUndefined(this.buttons[index].level)) {\r\n\r\n                return this.currentButton.level >= this.buttons[index].level;\r\n            } \r\n\r\n            return this.currentButtonIndex == index;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n(() => {\r\n    function ToggleButtonsDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            controller: ToggleButtonsController,\r\n            controllerAs: 'toggle',\r\n            scope: {\r\n                ngDisabled: '&',\r\n                buttons: '=pipButtons',\r\n                currentButtonValue: '=ngModel',\r\n                currentButton: '=?pipButtonObject',\r\n                multiselect: '=?pipMultiselect',\r\n                change: '&ngChange',\r\n                onlyToggle: '=?pipOnlyToggle'\r\n            },\r\n            link: function (scope, elem) {\r\n                elem\r\n                    .on('focusin', function () {\r\n                        elem.addClass('focused-container');\r\n                    })\r\n                    .on('focusout', function () {\r\n                        elem.removeClass('focused-container');\r\n                    });\r\n            },\r\n            templateUrl: 'toggle_buttons/toggle_buttons.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipToggleButtons', ['pipButtons.Templates'])\r\n        .directive('pipToggleButtons', ToggleButtonsDirective);\r\n\r\n})();\r\n\r\n/*\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipToggleButtons', ['pipButtons.Templates']);\r\n\r\n    thisModule.directive('pipToggleButtons',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    ngDisabled: '&',\r\n                    buttons: '=pipButtons',\r\n                    currentButtonValue: '=ngModel',\r\n                    currentButton: '=?pipButtonObject',\r\n                    multiselect: '=?pipMultiselect',\r\n                    change: '&ngChange',\r\n                    onlyToggle: '=?pipOnlyToggle'\r\n                },\r\n                templateUrl: 'toggle_buttons/toggle_buttons.html',\r\n                controller: \r\n                function ($scope, $element, $attrs, $mdMedia, $timeout) {\r\n                    var index;\r\n\r\n                    $scope.$mdMedia = $mdMedia;\r\n                    $scope.class = $attrs.class || '';\r\n                    $scope.multiselect = $scope.multiselect || false;\r\n\r\n                    if (!$scope.buttons || _.isArray($scope.buttons) && $scope.buttons.length === 0) {\r\n                        $scope.buttons = [];\r\n                    }\r\n\r\n                    index = _.indexOf($scope.buttons, _.find($scope.buttons, {id: $scope.currentButtonValue}));\r\n                    $scope.currentButtonIndex = index < 0 ? 0 : index;\r\n                    $scope.currentButton = $scope.buttons.length > 0 ? $scope.buttons[$scope.currentButtonIndex]\r\n                        : $scope.currentButton;\r\n\r\n                    $scope.buttonSelected = function (index) {\r\n                        if ($scope.disabled()) {\r\n                            return;\r\n                        }\r\n\r\n                        $scope.currentButtonIndex = index;\r\n                        $scope.currentButton = $scope.buttons[$scope.currentButtonIndex];\r\n                        $scope.currentButtonValue = $scope.currentButton.id || index;\r\n\r\n                        $timeout(function () {\r\n                            if ($scope.change) {\r\n                                $scope.change();\r\n                            }\r\n                        });\r\n                    };\r\n\r\n                    $scope.enterSpacePress = function (event) {\r\n                        $scope.buttonSelected(event.index);\r\n                    };\r\n\r\n                    $scope.disabled = function () {\r\n                        if ($scope.ngDisabled) {\r\n                            return $scope.ngDisabled();\r\n                        }\r\n                    };\r\n\r\n                    $scope.highlightButton = function (index) {\r\n                        if ($scope.multiselect && $scope.currentButton.level !== undefined && $scope.buttons[index].level !== undefined) {\r\n                           return $scope.currentButton.level >= $scope.buttons[index].level;\r\n                        } else {\r\n                            return $scope.currentButtonIndex == index;\r\n                        }\r\n                    }\r\n                },\r\n                link: function (scope, elem) {\r\n                    elem\r\n                        .on('focusin', function () {\r\n                            elem.addClass('focused-container');\r\n                        })\r\n                        .on('focusout', function () {\r\n                            elem.removeClass('focused-container');\r\n                        });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})(); \r\n*/\r\n","(function(module) {\ntry {\n  module = angular.module('pipButtons.Templates');\n} catch (e) {\n  module = angular.module('pipButtons.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('toggle_buttons/toggle_buttons.html',\n    '<div class=\"pip-toggle-buttons layout-row {{toggle.class}}\" pip-selected=\"toggle.bufButtonIndex\" pip-enter-space-press=\"toggle.enterSpacePress($event)\" ng-if=\"!toggle.$mdMedia(\\'xs\\') || toggle.onlyToggle\"><md-button tabindex=\"-1\" ng-repeat=\"button in toggle.buttons\" ng-class=\"{\\'md-accent md-raised selected color-accent-bg\\' : toggle.highlightButton($index)}\" ng-attr-style=\"{{ \\'background-color:\\' + (toggle.highlightButton($index) ? toggle.button.backgroundColor : \\'\\') + \\'!important\\' }}\" class=\"pip-selectable pip-chip-button flex\" ng-click=\"toggle.buttonSelected($index, $event)\" ng-disabled=\"button.disabled || toggle.disabled()\">{{button.name || button.title | translate}} <span ng-if=\"button.checked || button.complete || button.filled\" class=\"pip-tagged\">*</span></md-button></div><md-input-container class=\"md-block\" ng-if=\"toggle.$mdMedia(\\'xs\\') && !toggle.onlyToggle\"><md-select ng-model=\"toggle.currentButtonIndex\" ng-disabled=\"toggle.disabled()\" aria-label=\"DROPDOWN\" md-on-close=\"toggle.buttonSelected(toggle.currentButtonIndex)\"><md-option ng-repeat=\"action in toggle.buttons\" value=\"{{ ::$index }}\">{{ (action.title || action.name) | translate }} <span ng-if=\"action.checked || action.complete || action.filled\" class=\"pip-tagged\">*</span></md-option></md-select></md-input-container>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-buttons-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}