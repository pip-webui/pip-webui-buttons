!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,(e.pip||(e.pip={})).buttons=t()}}(function(){return function t(e,n,i){function o(s,r){if(!n[s]){if(!e[s]){var l="function"==typeof require&&require;if(!r&&l)return l(s,!0);if(u)return u(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var a=n[s]={exports:{}};e[s][0].call(a.exports,function(t){var n=e[s][1][t];return o(n?n:t)},a,a.exports,t,e,n,i)}return n[s].exports}for(var u="function"==typeof require&&require,s=0;s<i.length;s++)o(i[s]);return o}({1:[function(t,e,n){angular.module("pipButtons",["pipToggleButtons","pipRefreshButton","pipFabTooltipVisibility"])},{}],2:[function(t,e,n){function i(t){var e=t.has("pipTranslate")?t.get("pipTranslate"):null;return function(t){return e?e.translate(t)||t:t}}i.$inject=["$injector"],angular.module("pipButtons.Translate",[]).filter("translate",i)},{}],3:[function(t,e,n){function i(t,e){return{restrict:"A",scope:!1,controller:o}}i.$inject=["$parse","$timeout"];var o=function(){function t(t,e,n,i,o){"ngInject";var u=o(e.pipFabTooltipVisibility),s=o(e.pipFabShowTooltip),r=s.assign;n.$watch(u,function(t){_.isFunction(r)&&(t?i(function(){r(n,t)},600):r(n,t))})}return t.$inject=["$element","$attrs","$scope","$timeout","$parse"],t}();angular.module("pipFabTooltipVisibility",[]).directive("pipFabTooltipVisibility",i)},{}],4:[function(t,e,n){var i={text:"<pipText",visible:"<pipVisible",onRefresh:"&?pipRefresh"},o=(function(){function t(){}return t}(),function(){function t(t,e,n){this.$scope=t,this.$element=e,this.$attrs=n}return t.prototype.$postLink=function(){this._buttonElement=this.$element.children(".md-button"),this._textElement=this._buttonElement.children(".pip-refresh-text"),this.show()},t.prototype.$onChanges=function(t){t.visible.currentValue===!0?(this.text=t.text.currentValue,this.show()):this.hide()},t.prototype.onClick=function(t){this.onRefresh&&this.onRefresh({$event:t})},t.prototype.show=function(){if(void 0!==this._textElement&&void 0!==this._buttonElement){this._textElement.text(this.text),this._buttonElement.show();var t=this._buttonElement.width();this._buttonElement.css("margin-left","-"+t/2+"px")}},t.prototype.hide=function(){this._buttonElement.hide()},t}()),u={bindings:i,controller:o,template:'<md-button class="pip-refresh-button" tabindex="-1" ng-click="$ctrl.onClick($event)" aria-label="REFRESH"><md-icon md-svg-icon="icons:refresh"></md-icon><span class="pip-refresh-text"></span></md-button>'};angular.module("pipRefreshButton",["ngMaterial"]).component("pipRefreshButton",u)},{}],5:[function(t,e,n){var i=(function(){function t(){}return t}(),{ngDisabled:"<?",buttons:"<pipButtons",currentButtonValue:"=ngModel",currentButton:"=?pipButtonObject",multiselect:"<?pipMultiselect",change:"&ngChange",onlyToggle:"<?pipOnlyToggle"}),o=(function(){function t(){}return t}(),function(){function t(t,e,n,i,o){"ngInject";this.$element=t,this.$attrs=e,this.$scope=n,this.$timeout=i,this.pipMedia=o.has("pipMedia")?o.get("pipMedia"):null,this.class=e.class||"";var u=_.indexOf(this.buttons,_.find(this.buttons,{id:this.currentButtonValue}));this.currentButtonIndex=u<0?0:u,this.currentButton=this.buttons.length>0?this.buttons[this.currentButtonIndex]:this.currentButton}return t.$inject=["$element","$attrs","$scope","$timeout","$injector"],t.prototype.$onChanges=function(t){this.multiselect=!!t.multiselect&&t.multiselect.currentValue,this.disabled=!!t.ngDisabled&&t.ngDisabled.currentValue,this.onlyToggle=!!t.onlyToggle&&t.onlyToggle.currentValue,this.buttons=!t.buttons||_.isArray(t.buttons.currentValue)&&0===t.buttons.currentValue.length?[]:t.buttons.currentValue;var e=_.indexOf(this.buttons,_.find(this.buttons,{id:this.currentButtonValue}));this.currentButtonIndex=e<0?0:e,this.currentButton=this.buttons.length>0?this.buttons[this.currentButtonIndex]:this.currentButton},t.prototype.$postLink=function(){var t=this;this.$element.on("focusin",function(){t.$element.addClass("focused-container")}).on("focusout",function(){t.$element.removeClass("focused-container")})},t.prototype.buttonSelected=function(t){var e=this;this.disabled||(this.currentButtonIndex=t,this.currentButton=this.buttons[this.currentButtonIndex],this.currentButtonValue=this.currentButton.id||t,this.$timeout(function(){e.change&&e.change()}))},t.prototype.enterSpacePress=function(t){this.buttonSelected(t.index)},t.prototype.highlightButton=function(t){return!this.multiselect||_.isUndefined(this.currentButton.level)||_.isUndefined(this.buttons[t].level)?this.currentButtonIndex==t:this.currentButton.level>=this.buttons[t].level},t}()),u={bindings:i,templateUrl:"toggle_buttons/toggle_buttons.html",controller:o};angular.module("pipToggleButtons",["pipButtons.Templates"]).component("pipToggleButtons",u)},{}],6:[function(t,e,n){!function(t){try{t=angular.module("pipButtons.Templates")}catch(e){t=angular.module("pipButtons.Templates",[])}t.run(["$templateCache",function(t){t.put("toggle_buttons/toggle_buttons.html",'<div class="pip-toggle-buttons layout-row {{$ctrl.class}}" pip-selected="$ctrl.bufButtonIndex" pip-enter-space-press="$ctrl.enterSpacePress($event)" ng-if="!$ctrl.pipMedia(\'xs\') || $ctrl.onlyToggle"><md-button tabindex="-1" ng-repeat="button in $ctrl.buttons" ng-class="{\'md-accent md-raised selected color-accent-bg\' : $ctrl.highlightButton($index)}" ng-attr-style="{{ \'background-color:\' + ($ctrl.highlightButton($index) ? button.backgroundColor : \'\') + \'!important\' }}" class="pip-selectable pip-chip-button flex" ng-click="$ctrl.buttonSelected($index, $event)" ng-disabled="button.disabled || $ctrl.disabled">{{button.name || button.title | translate}} <span ng-if="button.checked || button.complete || button.filled" class="pip-tagged">*</span></md-button></div><md-input-container class="md-block" ng-if="$ctrl.pipMedia(\'xs\') && !$ctrl.onlyToggle"><md-select ng-model="$ctrl.currentButtonIndex" ng-disabled="$ctrl.disabled" aria-label="DROPDOWN" md-on-close="$ctrl.buttonSelected($ctrl.currentButtonIndex)"><md-option ng-repeat="action in $ctrl.buttons" value="{{ ::$index }}">{{ (action.title || action.name) | translate }} <span ng-if="action.checked || action.complete || action.filled" class="pip-tagged">*</span></md-option></md-select></md-input-container>')}])}()},{}]},{},[6,1,2,3,4,5])(6)});
//# sourceMappingURL=pip-webui-buttons.min.js.map
