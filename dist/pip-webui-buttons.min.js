!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,(n.pip||(n.pip={})).buttons=t()}}(function(){return function t(n,e,o){function i(r,c){if(!e[r]){if(!n[r]){var s="function"==typeof require&&require;if(!c&&s)return s(r,!0);if(u)return u(r,!0);var a=new Error("Cannot find module '"+r+"'");throw a.code="MODULE_NOT_FOUND",a}var l=e[r]={exports:{}};n[r][0].call(l.exports,function(t){var e=n[r][1][t];return i(e?e:t)},l,l.exports,t,n,e,o)}return e[r].exports}for(var u="function"==typeof require&&require,r=0;r<o.length;r++)i(o[r]);return i}({1:[function(t,n,e){!function(){"use strict";angular.module("pipButtons",["pipToggleButtons","pipRefreshButton","pipFabTooltipVisibility"])}()},{}],2:[function(t,n,e){!function(){"use strict";var t=angular.module("pipButtons.Translate",[]);t.filter("translate",["$injector",function(t){var n=t.has("pipTranslate")?t.get("pipTranslate"):null;return function(t){return n?n.translate(t)||t:t}}])}()},{}],3:[function(t,n,e){!function(){"use strict";var t=angular.module("pipFabTooltipVisibility",[]);t.directive("pipFabTooltipVisibility",["$parse","$timeout",function(t,n){return{restrict:"A",scope:!1,controller:["$scope","$attrs",function(e,o){var i=t(o.pipFabTooltipVisibility),u=t(o.pipFabShowTooltip),r=u.assign;e.$watch(i,function(t){t?n(function(){r(e,t)},600):r(e,t)})}]}}])}()},{}],4:[function(t,n,e){!function(){"use strict";var t=angular.module("pipRefreshButton",["ngMaterial"]);t.directive("pipRefreshButton",["$parse",function(t){return{restrict:"EA",scope:!1,template:String()+'<md-button class="pip-refresh-button" tabindex="-1" ng-click="onClick($event)" aria-label="REFRESH"><md-icon md-svg-icon="icons:refresh"></md-icon><span class="pip-refresh-text"></span></md-button>',replace:!1,link:function(n,e,o){function i(){p.hide()}var u,r,c,s=t(o.pipText),a=t(o.pipVisible),l=t(o.pipRefresh),p=e.children(".md-button"),d=p.children(".pip-refresh-text");c=function(){r=s(n),d.text(r),p.show(),u=p.width(),p.css("margin-left","-"+u/2+"px")},n.onClick=function(){l(n)},n.$watch(a,function(t){t?c():i()}),n.$watch(s,function(t){d.text(t)})}}}])}()},{}],5:[function(t,n,e){!function(){"use strict";var t=angular.module("pipToggleButtons",["pipButtons.Templates"]);t.directive("pipToggleButtons",function(){return{restrict:"EA",scope:{ngDisabled:"&",buttons:"=pipButtons",currentButtonValue:"=ngModel",currentButton:"=?pipButtonObject",change:"&ngChange",onlyToggle:"=?pipOnlyToggle"},templateUrl:"toggle_buttons/toggle_buttons.html",controller:["$scope","$element","$attrs","$mdMedia","$timeout",function(t,n,e,o,i){var u;t.$mdMedia=o,t.class=e.class||"",(!t.buttons||_.isArray(t.buttons)&&0===t.buttons.length)&&(t.buttons=[]),u=_.indexOf(t.buttons,_.find(t.buttons,{id:t.currentButtonValue})),t.currentButtonIndex=u<0?0:u,t.currentButton=t.buttons.length>0?t.buttons[t.currentButtonIndex]:t.currentButton,t.buttonSelected=function(n){t.disabled()||(t.currentButtonIndex=n,t.currentButton=t.buttons[t.currentButtonIndex],t.currentButtonValue=t.currentButton.id||n,i(function(){t.change&&t.change()}))},t.enterSpacePress=function(n){t.buttonSelected(n.index)},t.disabled=function(){if(t.ngDisabled)return t.ngDisabled()}}],link:function(t,n){n.on("focusin",function(){n.addClass("focused-container")}).on("focusout",function(){n.removeClass("focused-container")})}}})}()},{}],6:[function(t,n,e){!function(t){try{t=angular.module("pipButtons.Templates")}catch(n){t=angular.module("pipButtons.Templates",[])}t.run(["$templateCache",function(t){t.put("toggle_buttons/toggle_buttons.html",'<div class="pip-toggle-buttons layout-row {{class}}" pip-selected="bufButtonIndex" pip-enter-space-press="enterSpacePress($event)" ng-if="$mdMedia(\'gt-xs\') || onlyToggle"><md-button tabindex="-1" ng-repeat="button in buttons" ng-class="{\'md-accent md-raised selected color-accent-bg\' : currentButtonIndex == $index}" ng-attr-style="{{ \'background-color:\' + (currentButtonIndex == $index ? button.backgroundColor : \'\') + \'!important\' }}" class="pip-selectable pip-chip-button flex" ng-click="buttonSelected($index, $event)" ng-disabled="button.disabled || disabled()">{{button.name || button.title | translate}} <span ng-if="button.checked || button.complete || button.filled" class="pip-tagged">*</span></md-button></div><md-input-container class="md-block" ng-if="$mdMedia(\'xs\') && !onlyToggle"><md-select ng-model="currentButtonIndex" ng-disabled="disabled()" aria-label="DROPDOWN" md-on-close="buttonSelected(currentButtonIndex)"><md-option ng-repeat="action in buttons" value="{{ ::$index }}">{{ (action.title || action.name) | translate }} <span ng-if="action.checked || action.complete || action.filled" class="pip-tagged">*</span></md-option></md-select></md-input-container>')}])}()},{}]},{},[1,2,3,4,5,6])(6)});
//# sourceMappingURL=pip-webui-buttons.min.js.map
